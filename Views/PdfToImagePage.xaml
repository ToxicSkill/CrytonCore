<Page x:Class="CrytonCore.Views.PdfToImagePage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ViewModel="clr-namespace:CrytonCore.ViewModel" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="665" d:DesignWidth="1334"
             AllowDrop="True"
             xmlns:helpers="clr-namespace:CrytonCore.Helpers" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             helpers:FileDragDropHelper.IsFileDragDropEnabled="True" 
             helpers:FileDragDropHelper.FileDragDropTarget="{Binding}">


    <Page.DataContext>
        <ViewModel:PdfToImageViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>

            <Storyboard x:Key="ExtendTopBar">

                <DoubleAnimation
                Storyboard.TargetName="barTop"
                Storyboard.TargetProperty="Height"
                From="0" To="700"
                BeginTime="0:0:0"
                Duration="0:0:2"/>

            </Storyboard>
            <Storyboard x:Key="CollapseTopBar">

                <DoubleAnimation 
                Storyboard.TargetName="barTop"
                Storyboard.TargetProperty="Height"
                From="700" To="0"
                BeginTime="0:0:0"
                Duration="0:0:1"/>

            </Storyboard>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Page.Background>
        <LinearGradientBrush EndPoint="0.5,1" 
                             MappingMode="RelativeToBoundingBox" 
                             StartPoint="0.5,0" Opacity="1">
            <GradientStop Color="{DynamicResource backgroundTopColor}"/>
            <GradientStop Offset="1"/>
        </LinearGradientBrush>
    </Page.Background>


    <Grid>
        <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="230" Height="60" Margin="40,0,0,25"
                  Visibility="{Binding VisibilityDefaultAsHidden}" >

            <Label Width="200" Height="60" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontFamily="Lato Light" Style="{StaticResource TransparentLabelOpacity}"
                           FontSize="23" Foreground="{DynamicResource backText}" VerticalContentAlignment="Center"
                           Content="{DynamicResource backText_pdfMerge}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                        <i:InvokeCommandAction Command="{Binding MoveBack}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Label.Triggers>
                    <EventTrigger RoutedEvent="Label.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation Storyboard.TargetName="RotateImageBack" 
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                                                         From="0" To="90" AutoReverse="False"
                                                         BeginTime="0:0:0" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Label.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="RotateImageBack" 
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                                                         From="90" To="0" AutoReverse="False"
                                                         BeginTime="0:0:0" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Label.Triggers>
            </Label>
            <Image x:Name="RotateImageBack" Source="/CrytonCore;component/Assets/Back.png" 
                           HorizontalAlignment="Left" Width="30"
                           RenderOptions.EdgeMode="Aliased"
                           RenderOptions.BitmapScalingMode="HighQuality"  >
                <Image.RenderTransform>
                    <RotateTransform CenterX="15" CenterY="15"/>
                </Image.RenderTransform>
            </Image>
        </Grid>

        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20" Visibility="{Binding VisibilityDefaultAsHidden}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="220"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <Image Grid.Column="0" Grid.Row="0" Source="/CrytonCore;component/Assets/Down.png" 
                                   HorizontalAlignment="Left" Width="24"
                                       RenderOptions.EdgeMode="Aliased"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
            <Label  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontFamily="Lato Light" Style="{StaticResource TransparentLabelOpacity}" 
                           FontSize="22" Foreground="{DynamicResource text}" Margin="28,0,10,0" VerticalContentAlignment="Center"
                           Content="{DynamicResource loadAntoherFile_pdfToImage}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                        <i:InvokeCommandAction Command="{Binding LoadFileViaDialog}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Image Grid.Column="0" Grid.Row="1" Source="/CrytonCore;component/Assets/Down.png" 
                                   HorizontalAlignment="Left" Width="24"
                                       RenderOptions.EdgeMode="Aliased"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
            <Label  Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontFamily="Lato Light" Style="{StaticResource TransparentLabelOpacity}" 
                           FontSize="22" Foreground="{DynamicResource text}" Margin="28,0,10,0" VerticalContentAlignment="Center"
                           Content="{DynamicResource saveCurrent_pdfToImage}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                        <i:InvokeCommandAction Command="{Binding SaveCurrent}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Image Grid.Column="0" Grid.Row="2" Source="/CrytonCore;component/Assets/Down.png" 
                                   HorizontalAlignment="Left" Width="24"
                                       RenderOptions.EdgeMode="Aliased"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
            <Label  Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontFamily="Lato Light" Style="{StaticResource TransparentLabelOpacity}" 
                           FontSize="22" Foreground="{DynamicResource text}" Margin="28,0,10,0" VerticalContentAlignment="Center"
                           Content="{DynamicResource saveAll_pdfToImage}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                        <i:InvokeCommandAction Command="{Binding SaveCurrent}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

        </Grid>

        <!--<materialDesign:ColorZone x:Name="topLabel" Grid.Row="0" Mode="Light" Background="#FF156412" VerticalAlignment="Top" 
                                  HorizontalAlignment="Stretch" Height="77" VerticalContentAlignment="Stretch" >-->
        <Label Content="PDF TO IMAGE" HorizontalContentAlignment="Left" HorizontalAlignment="Left"  VerticalContentAlignment="Bottom"
                           Margin="45,0,0,0" VerticalAlignment="Top" Height="77" Width="807" 
                           FontSize="52" Background="#00000000" Foreground="{DynamicResource title}" FontFamily="Lato Light"/>
        <!--</materialDesign:ColorZone>-->

        <ListView x:Name="filesListView" HorizontalContentAlignment="Stretch" 
                  SelectedIndex="{Binding SelectedItemIndex, Mode=TwoWay}"
                  Visibility="{Binding VisibilityDefaultAsHidden}" Foreground="White"
                  FontSize="24" ItemsSource="{Binding FilesView, Mode=OneWay}" 
                  VerticalAlignment="Top" Margin="0,82,0,0">

            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Button Background="Transparent" Foreground="White"  FontSize="16" FontWeight="Light">
                                        <Button.Content>
                                            <GridViewRowPresenter Content="{TemplateBinding Content}" />
                                        </Button.Content>
                                    </Button>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>

                <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Focusable" Value="false"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                <GradientStop Color="#CC114F9B" Offset="0.5"/>
                                <GradientStop Color="{DynamicResource gradientListViewItemLeft}" Offset="0"/>
                                <GradientStop Color="{DynamicResource gradientListViewItemLeft}" Offset="1"/>
                                <!--<GradientStop Offset="1" Color="{DynamicResource gradientListViewItemRight}"/>
                                <GradientStop Color="{DynamicResource gradientListViewItemLeft}" Offset="0"/>-->
                            </LinearGradientBrush>
                        </Grid.Background>
                        <TextBlock Text="{Binding FileName, Mode=OneWay}"  HorizontalAlignment="Center" />

                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>

        </ListView>


        <Grid x:Name="pdfViewGrid" Margin="275,125,275,10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding VisibilityDefaultAsHidden}">
            <Slider x:Name="pdfSlider" HorizontalAlignment="Center" Width="420" VerticalAlignment="Stretch" Visibility="{Binding SliderVisibility}"
                            Value="{Binding SliderValue}" Maximum="{Binding SliderMaximum}"  SmallChange="1">
            </Slider>
            <Image x:Name="pdfImage" Margin="0,25,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Source="{Binding BitmapSource}"/>
        </Grid>


        <Grid x:Name="dragDropGrid" Margin="45,269,20,229" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Visibility="{Binding VisibilityDefaultAsShowed}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="479*"/>
                <ColumnDefinition Width="791*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="LabelDropInfo1"  HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Width="1269" Height="54" FontSize="36" 
                           FontFamily="Lato Light" FontWeight="Bold" 
                           Background="#00000000" Foreground="{DynamicResource font}"
                           Content = "{DynamicResource dragAndDropLabel1}"
                           Opacity="0.7" Margin="0,38,0,75" Grid.ColumnSpan="2" />

            <Label x:Name="LabelDropInfo2" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Top" Width="1269" Height="48" FontSize="22" 
                           FontFamily="Lato Light" Background="#00000000" Foreground="{DynamicResource font}"
                           Style="{StaticResource TransparentLabelOpacity}" Margin="0,78,0,41" 
                           Content="{DynamicResource dragAndDropLabel2}" Grid.ColumnSpan="2">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                        <i:InvokeCommandAction Command="{Binding LoadFileViaDialog}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>
        </Grid>

    </Grid>
</Page>
