<Page x:Class="CrytonCore.Views.PasswordManagerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="clr-namespace:CrytonCore.Views" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      Title="PasswordManagerPage" 
      xmlns:ViewModel="clr-namespace:CrytonCore.ViewModel" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
      Effect="{Binding Effect}" >

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Orange.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Page.DataContext>
        <ViewModel:PasswordManagerViewModel/>
    </Page.DataContext>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
        <materialDesign:Transitioner SelectedIndex="0" AutoApplyTransitionOrigins="True">
            <materialDesign:Transitioner.Background>
                <LinearGradientBrush EndPoint="0.5,1" 
                             MappingMode="RelativeToBoundingBox" 
                             StartPoint="0.5,0" Opacity="1">
                    <GradientStop Color="{DynamicResource backgroundTopColor}"/>
                    <GradientStop Offset="1"/>
                </LinearGradientBrush>
            </materialDesign:Transitioner.Background>
            <!--<Button Content="Button" Command="{Binding Change}" HorizontalAlignment="Left" Margin="380,86,0,0" VerticalAlignment="Top" Width="75"/>-->
        </materialDesign:Transitioner>

        <Label Content="{DynamicResource passwordManagerTitle_passwordManagerPage}" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom" HorizontalAlignment="Left" Margin="45,0,0,0" 
                       VerticalAlignment="Top" Height="77" Width="959" FontSize="52" Background="#00000000" Foreground="{DynamicResource title}" FontFamily="Lato Light"/>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,180,0,0"  >

            <ListView   HorizontalContentAlignment="Left" HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" SelectedIndex="{Binding SelectedItemIndex, Mode=TwoWay}"
                          Visibility="Visible"
                          IsSynchronizedWithCurrentItem="True"  Foreground="White"
                          FontSize="20" ItemsSource="{Binding AccountView}">


                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="100" HorizontalAlignment="Stretch">
                            <Grid.Background>
                                <SolidColorBrush Color="DarkOliveGreen"/>
                            </Grid.Background>
                            <TextBlock Text="{Binding Name, Mode=OneWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="42"  />
                            <TextBlock Text="{Binding Data, Mode=OneWay}" Margin="50,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>

                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>

            </ListView>
        </Grid>

        <!--<Grid x:Name="grid" Margin="10,150,150,0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                -->
        <!--<ColumnDefinition Width="auto" />-->
        <!--
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Button.Margin" Value="40, 20, 40, 20"/>
                    <Setter Property="Button.FontSize" Value="70"/>
                    <Setter Property="Button.Foreground" Value="White"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="15" BorderBrush="White" BorderThickness="1" Padding="2">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
        </Grid>-->
    </Grid>
</Page>
